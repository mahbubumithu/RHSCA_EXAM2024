QUESTION 1: 11Configure your Host Name, IP Address, Gateway and DNS.
Host name: station.domain40.example.com
IP Address:172.24.40.40/24
Gateway172.24.40.1
DNS:172.24.40.1

ANSWER:
#mcli con show

add new interface:

nmcli con add type ethernet ifname eth0 con-name LAN ipv4.addresses 192.168.1.10/24 ipv4.gateway 192.168.1.1

#nmcli con mod LAN ipv4.addresses 172.24.40.40/24 ipv4.gateway 172.24.40.1 ipv4.dns 172.24.40.1
#nmcli con mod LAN ipv4.method manual
#nmcli con up LAN
or 
#systemctl restart NetworkManager

#hostnamectl set-hostname station.domain40.example.com
#hostnamectl status
=======================================================================

QUESTION 2: Add 3 users: harry, natasha, tom.
The requirements: The Additional group of the two users: harry, Natasha is the admin group. The user: tom's login shell should be non-interactive.

ANSWER:
#groupadd admin
#useradd -G admin harry
#useradd -G admin natasha
#useradd -s /sbin/nologin tom
#passwd harry
.
.
========================================================================


QUESTION 3: Create a catalog under /home named admins. Its respective group is requested to be the admin group. The group users could read and write, while other users are not allowed to access it. The files created by users from the same group should also be the admin group.

QUESTION 4: Configure a task: plan to run echo hello command at 14:23 every day.

ANSWER: 
In Linux, crontab is a configuration file and utility that defines tasks to run automatically at specified intervals. These scheduled tasks, known as cron jobs, are managed by the cron daemon. Cron is commonly used for repetitive tasks like backups, system maintenance, or monitoring.

Crontab Syntax
* * * * * command_to_execute
| | | | |
| | | | └── Day of the week (0 - 7) (Sunday is 0 or 7)
| | | └──── Month (1 - 12)
| | └────── Day of the month (1 - 31)
| └──────── Hour (0 - 23)
└────────── Minute (0 - 59)

Field Values
Minute: 0 to 59.
Hour: 0 to 23 (24-hour format).
Day of the Month: 1 to 31.
Month: 1 to 12 (1 for January, 2 for February, etc.).
Day of the Week: 0 to 7 (0 or 7 for Sunday, 1 for Monday, etc.).
Special Characters
*: Represents "every" possible value for that time unit (e.g., * in the hour field means every hour).
,: Allows multiple values (e.g., 1,15 in the day field means the 1st and 15th of the month).
-: Specifies a range of values (e.g., 1-5 in the day field means Monday to Friday).
/: Specifies intervals (e.g., */5 in the minute field means every 5 minutes).

Run a script every day at 2:23 PM:
23 14 * * * /path/to/script.sh

Run a backup every Sunday at midnight:
0 0 * * 0 /path/to/backup.sh
Run a job every 2 minutes:
*/2 * * * * /path/to/job.sh
Run a task on the 1st and 15th of each month at 5:00 PM:
0 17 1,15 * * /path/to/task.sh
Run a task every Monday to Friday at 8:00 AM:
0 8 * * 1-5 /path/to/weekday_task.sh

Edit a User’s Crontab:
crontab -e
List a User’s Crontab:
crontab -l
Edit Crontab for Another User (requires root privileges):
sudo crontab -u username -e

Access Natasha’s Crontab
sudo crontab -u natasha -e

Add the Cron Job
# Runs /bin/echo hello every day at 14:23
23 14 * * * /bin/echo hello

# Runs /bin/echo hello every 2 minutes
*/2 * * * * /bin/echo hello



QUESTION 5: Find the files owned by harry, and copy it to catalog: /opt/dir

QUESTION 6: Find the rows that contain abcde from file /etc/testfile, and write it to the file/tmp/testfile, and the sequence is requested as the same as /etc/testfile.

QUESTION 7; Create a 2G swap partition which take effect automatically at boot-start, and it should not affect the original swap partition.

QUESTION 8: Create a user named alex, and the user id should be 1234, and the password should be alex111.

ANSWER:
#useradd -u 1234 alex
#passwd alex
#tail -1 /etc/passwd
===============================================================================

QUESTION 9: Install a FTP server, and request to anonymous download from /var/ftp/pub catalog. (it needs you to configure yum direct to the already existing file server.)

QUESTION 10: Configure a HTTP server, which can be accessed through http://station.domain40.example.com. Please download the released page from http://ip/dir/example.html.

QUESTION 11: Create a script file name find.sh. when you run this script it will find all files from 30k to 60k file size from the directory /etc directory & copies those files to /root/data directory. set the set-uid permission to these scripts.
ANSWER:
#vi find.sh

#!/bin/bash
ls -l /root/data > /dev/null 2>&1

if [ $? -ne 0 ]: then
mkdir /root/data
find /etc -size +30k -size -60k -exec cp {} /root/data/ \;
echo "Files copied done"

else
echo "Already files has been copied"
file
================================================================================

QUESTION: Add an additional swap partition of 512 MiB to your system. The swap partition should automatically mount when 
your system boots. Do not remove or otherwise alter any existing swap partition on your system.

ANSWER:

Step 1: Create a New Logical Volume for Swap
Check Free Space in the Volume Group:
#vgdisplay
Create the Swap Logical Volume:
#sudo lvcreate -L 512M -n swaplv vg_name
Format the Logical Volume as Swap
#sudo mkswap /dev/vg_name/swaplv
Enable the Swap Volume
#sudo swapon /dev/vg_name/swaplv
To verify
#swapon --show
Make the Swap Volume Persistent
sudo vi /etc/fstab
/dev/vg_name/swaplv none swap sw 0 0
=================================================================================
List Available Drives:
#lsblk
Partition the Drive (if needed)
#sudo fdisk /dev/sdb
In fdisk:

- Type n to create a new partition.
- Select primary partition (usually p).
- Press Enter to accept the defaults, which will allocate all free space to the partition.
- Type t and then 82 to set the partition type to Linux swap.
- Type w to write changes and exit.
Format the Partition as Swap
#sudo mkswap /dev/sdb1
Enable the Swap Partition
#sudo swapon /dev/sdb1
#swapon --show


QUESTION: Create a container and make sure it will Available after system reboot.

ANSWER:
Steps

### Steps

1. Create the user, must have a passwd.
   2. ``useradd rambo; passwd rambo``
2. We need to enable linger for the rambo user.
   4. ``loginctl enable-linger rambo`` Verify with ``loginctl show-user username``
3. SSH into the server.
   4. ssh ``rambo@localhost``
4. Create the directory that Podman will write the systemd unit file to.
Remember you must be in the folder when you run podman generate systemd, hence the cd command.
   6. ``mkdir -p ~/.config/systemd/user; cd ~/.config/systemd/user``
5. Let's create and start the container we want systemd to automatically start.
   8. ``podman run -d --name webmaster -p 8089:80 nginx``
6. Now we need to generate the systemd unit file.
   10. ``podman generate systemd --name webmaster --files --new``
7. This will create the "container-webmaster.service" file. Next we need to
check the file and make sure that wanted by is default.target. "WantedBy=default.target"
   12. ``vim container-webmaster.service ``
8. Next we need to reload the user daemon.
   9. ``systemctl --user daemon-reload`
9. Let's enable the service we created.
   10. ``systemctl --user enable container-webmaster.service``
11. Let's check the status of the service. It should be enabled but not running.
    12. ``systemctl --user status container-webmaster.service``
13. To see if it worked we must reboot the server. Once the reboot is over, check if you
see the nginx process running under user rambo. You can also ``curl localhost:8089``
    14. ``ps faux | less`` Look for processes under user rambo.


##QUESTION: AutoFS

ANSWER:
Autofs

On the exam, check "/etc/auto.misc" for nice syntax examples that can help if you're stuck! You won't see auto.misc until you have installed the autofs package.

Now on the client that will be using autofs, do the following.

First make sure you can see the exports on from the NFS Server.

showmount -e nfsservername

Automount is common for home directories. An NFS server is providing access to home directories, and the home directory is automounted when the user logs in.

Install autofs.

dnf install autofs

In "/etc/auto.master" you'll identify the directory that automount should manage, and the file that is used for additional mount information.

    "/nfsdata" and "/etc/auto.nfsdata"
    "/nfsdata" is the mounting point and the second line "/etc/auto.nfsdata" is a file you create that gives the necessary parameters to mount it.
    In "/etc/auto.nfsdata" you'll identify the subdirectory on which to mount, and what to mount.
    files -rw nfsservername:/nfsdata

Files is a subdirectory under /nfsdata that is created when you cd into it.

For nfsserver, put the ip or the DNS name of the server you want to automount from.

Enable and start the autofs service. systemctl enable --now autofs

This will automatically create the folders necessary under the root "/" folder. In this example it creates the ''/misc" and "/nfsdata" folders. 
If you cd /nfsdata, it should be empty. If you cd into files, even though /nfsdata is empty you will cd into the /nfsdata directory on the nfsserver.

==========================================================

#QUESTION: SELinux Context (semanage)

#ANSWER:

#semanage port -l | grep 80

# systemctl status httpd

# journalctl -u httpd

#semanage port -a -t http_port_t -p tcp 82
#firewall-cmd --permanent --add-port=82/tcp
#firewall-cmd --reload

[ man semanage-port]

==========================================================

#QUESTION: [Autofs Configuration] 
 
Configure autofs to automount the home directories of user remoteuser15. Note the following: 
• utility.lab.example.com (172.24.10.10), NFS-exports /netdir to your system, where
user is remoteuser15 
• remoteuser15’s home directory is utility.lab.example.com:/netdir/remoteuser15 
• remoteuser15’s home directory should be auto mounted locally beneath /netdir as
/netdir/remoteuser15 
• Home directories must be writable by their users while you are able to login as any of
the remoteuser15 only home directory that is accessible from your system 
 
#Answer:
[root@servera ~]# dnf install autofs
[root@servera ~]# systemctl enable --now autofs
[root@servera ~]# vim /etc/auto.master.d/demo.autofs
            /netdir  /etc/auto.demo
[root@servera ~]# vim /etc/auto.demo
             remoteuser15  -fstype=nfs,rw,sync   utility.lab.example.com:/netdir/remoteuser15 
[root@servera ~]# systemctl restart autofs
[root@servera ~]# df -h
[root@servera ~]# su - remoteuser15
[remoteuser15@servera ~]$ ls
[remoteuser15@servera ~]$ touch file1 
=======================================

QUESTION: Create an LVM name wshare from wgroup vloume. note the following:
- PE size should be 8MB
- LVM size should be 50 extents
- format with ext4 file system and mount it under /mnt/wshare. and it should auto mount after next reboot.
exam can have filesystem -vfat, xfs

ANSWER:


